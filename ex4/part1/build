#!/bin/bash -e
COMPILER=0
LINKER=0
STRIP=0
compilerOptions=""
linkerOptions=""

function synopsis {
	echo "Compiles a program into an executable.
	
		
	Switches

-h				Shows Synopsis
-c --compiler	[OPTION]	Insert compiler options ("" for none)
-l --linker	[OPTION]	Insert linker options ("" for none)
-s --strip			Strip the executable of debugging information

	Usage Examples:

	build -h
		Show this synopsis.
		
	build [-c|--compiler OPTION] [-l|--linker OPTION]
		Build an executable in steps, passing compiler and linking options
	"
	exit
}

function compile {

	#Checking timestamps on build files and compiling if necessary

	if [ ! -e "helper.o" ] || [ "helper.c" -nt "helper.o" ] || [ "helper.h" -nt "helper.o" ];then
		echo "helper.o not found \ outdated, compiling it from source"
		gcc -c helper.c $compilerOptions
	fi

	if [ ! -e "libhelper.a" ] || [ "helper.o" -nt "libhelper.a" ] ;then 
		echo "libhelper.a not found \ outdated, archiving it"
		ar cr libhelper.a helper.o
	fi

	if [ ! -e "main.o" ] || [ "main.c" -nt "main.o" ]; then
		echo "main.o not found \ outdated, archiving it"
		gcc -c main.c   $compilerOptions
	fi
	
}

function link {
	#Converting linking options to proper form for passing to linker:

	linkerOptions=$(echo "$linkerOptions" | tr ' ' ',')
	
	if [ ! -e "main.o" ] || [ ! -e "libhelper.a" ];then
		echo "Cannot link build, please compile first (--compile [OPTION])"
		exit 1
	fi

	if [ ! -e "main" ] || [ "main.o" -nt "main" ] || [ "libhelper.a" -nt "main" ];then

		echo "Linking Objects and Building Executable"
		if [ "$linkerOptions" == "" ];then
			gcc  -o main main.o libhelper.a  -lm
		else
			gcc -Wl,$linkerOptions -o main main.o libhelper.a  -lm
		fi

	else
	
		echo "Executable is already up to date"
	
	fi
	
}

function stripExec {
	if [ ! -e "main" ];then
		echo "Executable does not exist, cannot strip it"
		exit 1
	fi

	echo "Stripping Executable"
	strip "main"
}

OPT=$(getopt -n "builder" -o "c:,l:,h,s" -l "compiler:,linker:,help,strip" -- "$@")


eval set -- "$OPT"


while [ "$1" != "--" ]; do
	case "$1" in 
	-c|--compiler)
		COMPILER=1
		compilerOptions="$2"
		shift
		;;
	-l|--linker)
		LINKER=1
		linkerOptions="$2"
		shift
		;;
	-h|--help)
		synopsis
		;;
	-s|--strip)
		STRIP=1
		;;
	*)
		echo "Invalid Arguments"
		exit 1
		;;
	esac

	shift
done

if [ $COMPILER -eq 1 ] ;then
	compile
fi

if [ $LINKER -eq 1 ] ; then
	link
fi

if [ $STRIP -eq 1 ] ;then
	stripExec
fi
